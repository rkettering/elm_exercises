Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var text_for_num = function (inputVal) {
      return _U.eq(A2($Basics._op["%"],inputVal,5),0) && _U.eq(A2($Basics._op["%"],inputVal,3),0) ? A2($Basics._op["++"],
      $Basics.toString(inputVal),
      " FizzBuzz") : _U.eq(A2($Basics._op["%"],inputVal,5),0) ? A2($Basics._op["++"],$Basics.toString(inputVal)," Fizz") : _U.eq(A2($Basics._op["%"],
      inputVal,
      3),
      0) ? A2($Basics._op["++"],$Basics.toString(inputVal)," Buzz") : A2($Basics._op["++"],$Basics.toString(inputVal)," ____");
   };
   var main = $Html.text(A2($String.join,", ",A2($List.map,text_for_num,_U.range(0,20))));
   return _elm.Main.values = {_op: _op,text_for_num: text_for_num,main: main};
};